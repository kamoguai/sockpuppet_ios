name: iOS Build

on: push
  # push:
  #   branches:
  #     - main # 當推送到 main 分支時觸發
  # pull_request:
  #   branches:
  #     - main

jobs:
  build:
    runs-on: macos-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
      with:
        persist-credentials: false

    - name: Setup Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: '3.3.3'
        bundler-cache: true

    # - name: Set up SSH
    #   run: |
    #     mkdir -p ~/.ssh
    #     echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/rsa_github_depkey
    #     chmod 600 ~/.ssh/rsa_github_depkey
    #     ssh-keyscan github.com >> ~/.ssh/known_hosts
    #
    # - name: Clone repository
    #   run: git clone git@github.com:kamoguai/ios_certificate.git

    - name: Checkout private repository
      uses: actions/checkout@v3
      with:
        repository: kamoguai/ios_certificate
        token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
        path: ios_certificate

    - name: List files in private repository
      run: ls ios_certificate

    - name: Set up SSH
      uses: webfactory/ssh-agent@v0.5.3
      with:
        ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

    - name: Configure env
      run: |
        envFile="fastlane/.env"
        touch $envFile;
        cat >> $envFile <<EOL
        APP_STORE_CONNECT_API_ISSUER_ID="${{secrets.APP_STORE_CONNECT_API_ISSUER_ID}}"
        EOL
        cat >> $envFile <<EOL
        APP_STORE_CONNECT_API_KEY_ID="${{secrets.APP_STORE_CONNECT_API_KEY_ID}}"
        EOL
        cat >> $envFile <<EOL
        API_KEY_PATH="${{secrets.API_KEY_PATH}}"
        EOL
        cat >> $envFile <<EOL
        APP_IDENTIFIER="${{secrets.APP_IDENTIFIER}}"
        EOL
        cat >> $envFile <<EOL
        MATCH_PASSWORD="${{secrets.MATCH_PASSWORD}}"
        EOL
        cat >> $envFile <<EOL
        FASTLANE_APPLE_ID="${{secrets.FASTLANE_APPLE_ID}}"
        EOL
        cat >> $envFile <<EOL
        ITC_TEAM_ID="${{secrets.ITC_TEAM_ID}}"
        EOL
        cat >> $envFile <<EOL
        DEVELOPER_PORTAL_TEAM_ID="${{secrets.DEVELOPER_PORTAL_TEAM_ID}}"
        EOL
        cat >> $envFile <<EOL
        GIT_AUTHORIZATION="${{secrets.GIT_AUTHORIZATION}}"
        EOL
        cat >> $envFile <<EOL
        APP_DISTRIBUTION_DEV="${{secrets.APP_DISTRIBUTION_DEV}}"
        EOL
        cat >> $envFile <<EOL
        SCHEME="${{secrets.SCHEME}}"
        EOL
        cat >> $envFile <<EOL
        EXPORT_OUTPUT_DIRECTORY="${{secrets.EXPORT_OUTPUT_DIRECTORY}}"
        EOL
        cat $envFile
    # - name: Sync Certificates.
    #     uses: maierj/fastlane-action@v3.1.0
    #     with:
    #       lane: syncCertificates
    - name: Deploy iOS Beta to TestFlight via Fastlane
      uses: maierj/fastlane-action@v3.1.0
      with:
        lane: release_testing

    # - name: Build and distribute app
    #   run: |
    #     export LC_ALL=en_US.UTF-8
    #     export LANG=en_US.UTF-8
    #     Bundle exec fastlane release_beta
    #   env:
    #     APP_STORE_CONNECT_API_ISSUER_ID: ${{secrets.APP_STORE_CONNECT_API_ISSUER_ID}}
    #     APP_STORE_CONNECT_API_KEY_ID: ${{secrets.APP_STORE_CONNECT_API_KEY_ID}}
    #     API_KEY_PATH: ${{secrets.API_KEY_PATH}}
    #     APP_IDENTIFIER: ${{secrets.APP_IDENTIFIER}}
    #     MATCH_PASSWORD: ${{secrets.MATCH_PASSWORD}}
    #     FASTLANE_APPLE_ID: ${{secrets.FASTLANE_APPLE_ID}}
    #     ITC_TEAM_ID: ${{secrets.ITC_TEAM_ID}}
    #     DEVELOPER_PORTAL_TEAM_ID: ${{secrets.DEVELOPER_PORTAL_TEAM_ID}}
    #     GIT_AUTHORIZATION: ${{secrets.GIT_AUTHORIZATION}}
    #     APP_DISTRIBUTION_DEV: ${{secrets.APP_DISTRIBUTION_DEV}}
    #     APP_DISTRIBUTION: ${{secrets.APP_DISTRIBUTION}}
    #     SCHEME: ${{secrets.SCHEME}}
    #     EXPORT_OUTPUT_DIRECTORY: ${{secrets.EXPORT_OUTPUT_DIRECTORY}}

    # - name: Run a signing Certificate p12 script
    #   uses: apple-actions/import-codesign-certs@v1
    #   with:
    #     p12-file-base64: ${{ secrets.CERTIFICATES_P12 }}
    #     p12-password: ${{ secrets.CERTIFICATES_P12_PASSWORD }}
    # - uses: Apple-Actions/download-provisioning-profiles@v1
    #   with:
    #     bundle-id: com.webapp.testBuild
    #     issuer-id: ${{ secrets.ISSUER_ID }}
    #     api-key-id: ${{ secrets.KEY_ID }}
    #     api-private-key: ${{ secrets.PRIVATE_KEY }}
    #
    # - name: Install CocoaPods
    #   run: bundle exec pod install
    #   working-directory: ./SSGaming
    #
    # - name: Build IPA
    #   run: |
    #     xcodebuild clean archive \
    #       -project SSGaming.xcodeproj \
    #       -scheme SSGaming \
    #       -archivePath $GITHUB_WORKSPACE/build/SSGaming.xcarchive \
    #       -configuration Release \
    #       -allowProvisioningUpdates \
    #       CODE_SIGN_IDENTITY="iPhone Distribution" \
    #       PROVISIONING_PROFILE_SPECIFIER="com.webapp.testBuild"
    #
    #     xcodebuild -exportArchive \
    #       -archivePath $GITHUB_WORKSPACE/build/SSGaming.xcarchive \
    #       -exportPath $GITHUB_WORKSPACE/build/ \
    #       -exportOptionsPlist ./SSGaming/exportOptions.plist
    #   working-directory: ./SSGaming
    #
    # - name: Upload artifact
    #   uses: actions/upload-artifact@v2
    #   with:
    #     name: ipa
    #     path: $GITHUB_WORKSPACE/build/*.ipa
